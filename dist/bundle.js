(()=>{"use strict";class t{constructor(t){this.board=t||[],this.missed=[[]],this.hits=[[]]}initialize(){let t=0;for(let e=0;e<10;e++){this.board[e]=[];for(let i=0;i<10;i++)this.board[e][i]=t,t++}}placeShip(t){let e=t.column,i=t.position;for(let t=0;t<i.length;t++)this.board[e][this.board[e].indexOf(i[t])]="x"}recieveAttack(t,e){"x"===this.board[t][e]?void 0===this.hits[t]?this.hits[t]=[e]:this.hits[t].push(e):void 0===this.missed[t]?this.missed[t]=[e]:this.missed[t].push(e)}}class e{constructor(){this.turn=!0,this.position=this.position}autoPlay(){return Math.floor(10*Math.random())}}class i{constructor(t,e,i){this.length=t,this.hits=[],this.position=i,this.column=e}hit(t){this.position.includes(t)&&!this.hits.includes(t)&&this.hits.push(t)}isSunk(){return this.length===this.hits.length}}const s=(t,e)=>{const i=document.querySelector(e);t.initialize(),t.board.forEach((t=>{t.forEach((t=>{const e=document.createElement("div");e.classList.add("grids"),i.appendChild(e),e.value=t,e.innerText=t}))}))};(()=>{const o=new e,n=new e,r=new t,c=new t;s(r,"#primary-container"),s(c,"#secondary-container"),(t=>{const e=new i(3,0,[1,2,3]);t.placeShip(e),document.querySelectorAll("#primary-container>.grids").forEach((t=>t.addEventListener("mouseover",(t=>{}))))})(r),((t,e,i)=>{((t,e)=>{const i=document.querySelector(t);document.querySelectorAll(e).forEach((t=>{i.hasChildNodes()&&i.removeChild(t)}))})(e,".grids");const s=document.querySelector(e);t.board.forEach((t=>{t.forEach((t=>{const e=document.createElement("div");e.classList.add("grids"),s.appendChild(e),e.value=t,e.innerText=t}))}))})(r,"#primary-container"),console.log(r.board),((t,e)=>{document.querySelectorAll(".grids").forEach((i=>i.addEventListener("click",(s=>{if(t.turn){e.turn=!0,t.turn=!1,console.log("player: "+s.target.value);const o=new Event("click");i.dispatchEvent(o)}else e.turn&&(console.log("ai: "+e.autoPlay()),e.turn=!1,t.turn=!0)}))))})(o,n)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,