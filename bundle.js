(()=>{"use strict";class e{constructor(e){this.board=e||[],this.missed=[],this.hits=[],this.allow=!1,this.name=""}initialize(e){for(let t=0;t<10;t+=1){this.board[t]=[];for(let r=0;r<10;r+=1)this.board[t][r]=e,e++}}placeShip(e){const{column:t}=e,{position:r}=e;for(let e=0;e<r.length;e+=1)for(let n=0;n<r.length;n+=1)this.board[t[e]][this.board[t[e]].indexOf(r[n])]="x"}recieveAttack(e){this.hits.push(e)}recieveMiss(e){this.missed.push(e)}isMissed(e){return this.missed.includes(e)}allowAttack(){return this.allow}instanceName(){return this}allShipSunk(){return 16===this.hits.length}}class t{constructor(){this.turn=!0,this.position=this.position}autoPlay(e){return e[Math.floor(100*Math.random())]}}class r{constructor(e,t,r){this.length=e,this.hits=[],this.position=r||[],this.column=t||[]}hit(e){this.hits.push(e)}allShipSunk(){return 16===this.hits.length}}const n=(e,t,r,n)=>{const l=document.querySelector(t),{board:i}=e;let o=0;i.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add(r),t.classList.add(n),t.setAttribute("value",e),t.setAttribute("id",o),l.appendChild(t),t.value=e,t.textContent=e,o+=1}))}))},l=(e,t,r,n)=>{i(t,r);const l=document.querySelector(`#${t}`),{board:o}=e;let a=0;o.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add(r),t.classList.add(n),t.setAttribute("value",e),t.setAttribute("id",a),l.appendChild(t),t.value=e,t.textContent=e,a+=1}))})),a=0},i=(e,t)=>{const r=document.querySelector(`#${e}`);document.querySelectorAll(`.${t}`).forEach((e=>{r.removeChild(e)}))},o=(e,t,r)=>{const n=[6,7,8,9],l=[7,8,9],i=[8,9],o=[9];if(1===r)switch(!0){case 5===e.length&&n.includes(t.target.value%10):case 4===e.length&&l.includes(t.target.value%10):case 3===e.length&&i.includes(t.target.value%10):case 2===e.length&&o.includes(t.target.value%10):return!0}if(10===r)switch(!0){case 5===e.length&&n.includes(Math.floor(t.target.value/10)):case 4===e.length&&l.includes(Math.floor(t.target.value/10)):case 3===e.length&&i.includes(Math.floor(t.target.value/10)):case 2===e.length&&o.includes(Math.floor(t.target.value/10)):return!0}},a=(e,t,r,n)=>{const l=[];if(1!==e.length){for(let i=0;i<=(e.length-1)*n;i+=n){if(o(e,t,n))return;if(t.target.value+i==="x0")return;if(null===document.querySelector(`div[value="${t.target.value+i}"]`))return;if(t.target.value+i==="x0")return;document.querySelector(`div[value="${t.target.value+i}"]`).style.backgroundColor=r,l.push(t.target.value+i)}return l}},s=(e,t)=>{const r=e.autoPlay(t),n=new Map;n.set(r,r.value);const l=n.entries().next().value;return{key:l[0],value:l[1]}},c=[],u=[];let d=!0,h="horizontal",g=1;const p=document.querySelector("#rotate"),v=(n,i)=>{const o=document.querySelectorAll(`.player-grids.${h}`),u=new r(i,[0,0,0],[1,2,3]);3===i&&d&&(i+=1,d=!1),i<=1?(r=>{const n=new e;let l,i,o;n.name="aiBoard";const a=document.querySelectorAll(".player-grids");document.querySelectorAll(".ai-grids").forEach((e=>e.addEventListener("click",(u=>{const d=u.target.value,h=u.target.id;l=new t;const g=s(l,a);i=g.key,o=g.value,"x"!==d||c.includes(h)?"x"!==d&&(e.style.backgroundColor="lightgreen",f(i,o,r)):(c.push(h),n.recieveAttack(d),m(n),e.style.backgroundColor="rgb(248, 78, 49 )",f(i,o,r))}))))})(n):(o.forEach((e=>e.addEventListener("mouseover",(t=>{a(u,t,"lightblue",g),e.addEventListener("click",(e=>{try{u.position=a(u,e,"red",g),u.column=(e=>{const t=[];for(let r=0;r<=e.length-1;r+=1)e.position[r]&&t.push(Math.floor(e.position[r]/10));return t})(u),n.placeShip(u),l(n,"primary-container","player-grids",h),Array.from(document.querySelectorAll(".player-grids")).filter((e=>"x"===e.value)).forEach((e=>e.style.backgroundColor="lightblue"))}catch{return}v(n,i-1)}))})))),o.forEach((e=>e.addEventListener("mouseout",(e=>{a(u,e,"rgb(232 230 230)",g)})))))},f=(e,r,n)=>{let l=!1;e.addEventListener("click",(i=>{if(l)return;l=!0;let o=i.target.value,a=i.target.id;if(u.includes(a)){const n=document.querySelectorAll(".player-grids"),l=new t;let i=s(l,n);for(;u.includes(i.key.id);)i=s(l,n);e=i.key,r=i.value,o=i.value,a=i.key.id}"x"!==r||u.includes(a)?"x"===o||n.isMissed(o)?n.isMissed(o):(u.push(a),n.recieveMiss(o),e.style.backgroundColor="lightgreen"):(u.push(a),n.recieveAttack(r),m(n),e.style.backgroundColor="rgb(248, 78, 49)")}));const i=new Event("click");e.dispatchEvent(i)};p.addEventListener("click",(()=>{"horizontal"===h?(h="vertical",g=10):"vertical"===h&&(h="horizontal",g=1)}));const m=e=>{let t="";if(17===e.hits.length){t="aiBoard"===e.name?"You":"Computer";const r=document.querySelector(".winner-container");r.classList.add("show"),r.firstElementChild.textContent=`${t} Won!!`,r.addEventListener("click",(e=>{e.target instanceof HTMLButtonElement&&location.reload()}))}},y=(e,t)=>{e.column.fill(t);const r=Math.floor(5*Math.random()).toString();let n=parseInt(`1${t}${r}`);e.position=e.position.map((e=>{const t=n+1;return n+=1,t}))};(()=>{const t=new e,i=new e;t.initialize(0),i.initialize(100),n(t,"#primary-container","player-grids","horizontal"),n(i,"#secondary-container","ai-grids","horizontal"),(e=>{const t=new r(5,[0,0,0,0,0],[101,102,103,104,105]),n=new r(4,[7,7,7,7],[173,174,175,176]),i=new r(3,[2,2,2],[122,123,124]),o=new r(3,[4,4,4],[144,145,146]),a=new r(2,[8,9],[181,191]),s=(e=>{const t=[];let r=Math.floor(10*Math.random());for(let e=0;e<5;e+=1){for(;t.includes(r);)r=Math.floor(10*Math.random());t.push(r)}return t})();y(t,s[0]),y(n,s[1]),y(i,s[2]),y(o,s[3]),y(a,s[4]),e.placeShip(t),e.placeShip(n),e.placeShip(i),e.placeShip(o),e.placeShip(a),l(e,"secondary-container","ai-grids","horizontal")})(i),v(t,5,i)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,