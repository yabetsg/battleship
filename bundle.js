(()=>{"use strict";class t{constructor(t,e,o){this.length=t,this.hits=[],this.position=o||[],this.column=e||[]}hit(t){this.position.includes(t)&&!this.hits.includes(t)&&this.hits.push(t)}isSunk(){return this.length===this.hits.length}}const e=(t,e,o,i)=>{const s=document.querySelector(e);t.initialize(),t.board.forEach((t=>{t.forEach((t=>{const e=document.createElement("div");e.classList.add(o),e.classList.add(i),e.setAttribute("value",t),s.appendChild(e),e.value=t,e.textContent=t}))}))},o=(t,e,o,s)=>{i(e,o);const n=document.querySelector(`#${e}`);t.board.forEach((t=>{t.forEach((t=>{const e=document.createElement("div");e.classList.add(o),e.classList.add(s),e.setAttribute("value",t),n.appendChild(e),e.value=t,e.textContent=t}))}))},i=(t,e)=>{const o=document.querySelector(`#${t}`);document.querySelectorAll(`.${e}`).forEach((t=>{o.removeChild(t)}))},s=(t,e,o,i)=>{let s=[];if(1!==t.length){for(let n=0;n<=(t.length-1)*i;n+=i){if(null===document.querySelector(`div[value="${e.target.value+n}"]`))return;document.querySelector(`div[value="${e.target.value+n}"]`).style.backgroundColor=o,s.push(e.target.value+n)}return s}};let n=!0,r="horizontal",l=1;const a=document.querySelector("#rotate"),c=(e,i)=>{let a=document.querySelectorAll(`#primary-container>.${r}`);console.log(a[1]);const h=new t(i,[0,0,0],[1,2,3]);3===i&&n&&(i+=1,n=!1),i<=0||(a.forEach((t=>t.addEventListener("mouseover",(n=>{s(h,n,"blue",l),t.addEventListener("click",(t=>{h.position=s(h,t,"yellow",l),h.column=(t=>{let e=[];for(let o=0;o<=t.length-1;o++)null!=t.position[o]&&e.push(Math.floor(t.position[o]/10));return e})(h),e.placeShip(h),o(e,"primary-container","player-grids",r),console.log(e),c(e,i-1)}))})))),a.forEach((t=>t.addEventListener("mouseout",(t=>{s(h,t,"black",l)})))))};a.addEventListener("click",(t=>{console.log("before change: "+r),"horizontal"===r?(r="vertical",l=10,console.log("inside h")):"vertical"===r&&(r="horizontal",l=1,console.log("inside v"))}));class h{constructor(t){this.board=t||[],this.missed=[[]],this.hits=[[]]}initialize(){let t=0;for(let e=0;e<10;e++){this.board[e]=[];for(let o=0;o<10;o++)this.board[e][o]=t,t++}}placeShip(t){let e=t.column,o=t.position;for(let t=0;t<o.length;t++)for(let i=0;i<o.length;i++)this.board[e[t]][this.board[e[t]].indexOf(o[i])]="x"}recieveAttack(t,e){"x"===this.board[t][e]?void 0===this.hits[t]?this.hits[t]=[e]:this.hits[t].push(e):void 0===this.missed[t]?this.missed[t]=[e]:this.missed[t].push(e)}}class d{constructor(){this.turn=!0,this.position=this.position}autoPlay(){return Math.floor(10*Math.random())}}(()=>{new d,new d;const i=new h,s=new h;e(i,"#primary-container","player-grids","horizontal"),e(s,"#secondary-container","ai-grids","horizontal"),c(i,5),(e=>{const i=new t(5,[0,0,0,0,0],[1,2,3,4,5]),s=new t(4,[7,7,7,7],[73,74,75,76]),n=new t(3,[2,2,2],[22,23,24]),r=new t(3,[4,4,4],[44,45,46]),l=new t(2,[8,9],[81,91]);e.placeShip(i),e.placeShip(s),e.placeShip(n),e.placeShip(r),e.placeShip(l),o(e,"secondary-container","ai-grids")})(s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,