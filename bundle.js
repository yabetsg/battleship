(()=>{"use strict";class e{constructor(e){this.board=e||[],this.missed=[[]],this.hits=[[]]}initialize(){let e=0;for(let t=0;t<10;t++){this.board[t]=[];for(let r=0;r<10;r++)this.board[t][r]=e,e++}}placeShip(e){let t=e.column,r=e.position;for(let e=0;e<r.length;e++)this.board[t][this.board[t].indexOf(r[e])]="x"}recieveAttack(e,t){"x"===this.board[e][t]?void 0===this.hits[e]?this.hits[e]=[t]:this.hits[e].push(t):void 0===this.missed[e]?this.missed[e]=[t]:this.missed[e].push(t)}}class t{constructor(){this.turn=!0,this.position=this.position}autoPlay(){return Math.floor(10*Math.random())}}class r{constructor(e,t,r){this.length=e,this.hits=[],this.position=r||[],this.column=t}hit(e){this.position.includes(e)&&!this.hits.includes(e)&&this.hits.push(e)}isSunk(){return this.length===this.hits.length}}const o=(e,t,r)=>{const o=document.querySelector(t);e.initialize(),e.board.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add(r),t.setAttribute("value",e),o.appendChild(t),t.value=e,t.textContent=e}))}))},a=(e,t,r)=>{l(t,r);const o=document.querySelector(`#${t}`);e.board.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add(r),t.setAttribute("value",e),o.appendChild(t),t.value=e,t.textContent=e}))}))},l=(e,t)=>{const r=document.querySelector(`#${e}`);document.querySelectorAll(`.${t}`).forEach((e=>{r.removeChild(e)}))},s=(e,t,r)=>{switch(e.length){case 2:{const e=document.querySelector(`div[value="${t.target.value}"]`),o=document.querySelector(`div[value="${t.target.value+1}"]`);return e.style.backgroundColor=r,o.style.backgroundColor=r,[t.target.value,t.target.value+1]}case 3:{const e=document.querySelector(`.player-grids[value="${t.target.value}"]`),o=document.querySelector(`.player-grids[value="${t.target.value+1}"]`),a=document.querySelector(`.player-grids[value="${t.target.value+2}"]`);return e.style.backgroundColor=r,o.style.backgroundColor=r,a.style.backgroundColor=r,[t.target.value,t.target.value+1,t.target.value+2]}case 4:{const e=document.querySelector(`div[value="${t.target.value}"]`),o=document.querySelector(`div[value="${t.target.value+1}"]`),a=document.querySelector(`div[value="${t.target.value+2}"]`),l=document.querySelector(`div[value="${t.target.value+3}"]`);return e.style.backgroundColor=r,o.style.backgroundColor=r,a.style.backgroundColor=r,l.style.backgroundColor=r,[t.target.value,t.target.value+1,t.target.value+2,t.target.value+3]}case 5:{const e=document.querySelector(`.player-grids[value="${t.target.value}"]`),o=document.querySelector(`.player-grids[value="${t.target.value+1}"]`),a=document.querySelector(`.player-grids[value="${t.target.value+2}"]`),l=document.querySelector(`.player-grids[value="${t.target.value+3}"]`),s=document.querySelector(`.player-grids[value="${t.target.value+4}"]`);return e.style.backgroundColor=r,o.style.backgroundColor=r,a.style.backgroundColor=r,l.style.backgroundColor=r,s.style.backgroundColor=r,[t.target.value,t.target.value+1,t.target.value+2,t.target.value+3,t.target.value+4]}}};let u=!0;const c=(e,t)=>{const o=new r(t,0,[1,2,3]);if(3===t&&u&&(t+=1,u=!1),t<=0)return;const l=document.querySelectorAll("#primary-container>.player-grids");l.forEach((r=>r.addEventListener("mouseover",(l=>{s(o,l,"blue"),r.addEventListener("click",(r=>{o.position=s(o,r,"yellow"),o.column=Math.floor(o.position[0]/10),e.placeShip(o),a(e,"primary-container","player-grids"),c(e,t-1)}))})))),l.forEach((e=>e.addEventListener("mouseout",(e=>{s(o,e,"black")}))))};(()=>{new t,new t;const l=new e,s=new e;o(l,"#primary-container","player-grids"),o(s,"#secondary-container","ai-grids"),c(l,5),(e=>{const t=new r(5,0,[1,2,3,4,5]),o=new r(4,7,[73,74,75,76]),l=new r(3,2,[22,23,24]),s=new r(3,4,[44,45,46]),u=new r(2,9,[91,92]);e.placeShip(t),e.placeShip(o),e.placeShip(l),e.placeShip(s),e.placeShip(u),a(e,"secondary-container","ai-grids"),document.querySelectorAll("#secondary-container>.ai-grids")})(s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,