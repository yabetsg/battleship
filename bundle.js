(()=>{"use strict";class e{constructor(e){this.board=e||[],this.missed=[[]],this.hits=[],this.allow=!1,this.name=""}initialize(e){for(let t=0;t<10;t++){this.board[t]=[];for(let r=0;r<10;r++)this.board[t][r]=e,e++}}placeShip(e){let t=e.column,r=e.position;for(let e=0;e<r.length;e++)for(let n=0;n<r.length;n++)this.board[t[e]][this.board[t[e]].indexOf(r[n])]="x"}recieveAttack(e){this.hits.push(e)}allowAttack(){return this.allow}instanceName(){return this}}class t{constructor(){this.turn=!0,this.position=this.position}autoPlay(e){return e[Math.floor(100*Math.random())]}}class r{constructor(e,t,r){this.length=e,this.hits=[],this.position=r||[],this.column=t||[]}hit(e){this.hits.push(e)}allShipSunk(){return 16===this.hits.length}}const n=(e,t,r,n)=>{const a=document.querySelector(t);e.board.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add(r),t.classList.add(n),t.setAttribute("value",e),a.appendChild(t),t.value=e,t.textContent=e}))}))},a=(e,t,r,n)=>{o(t,r);const a=document.querySelector(`#${t}`);e.board.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add(r),t.classList.add(n),t.setAttribute("value",e),a.appendChild(t),t.value=e,t.textContent=e}))}))},o=(e,t)=>{const r=document.querySelector(`#${e}`);document.querySelectorAll(`.${t}`).forEach((e=>{r.removeChild(e)}))},l=(e,t,r)=>{let n=[6,7,8,9],a=[7,8,9],o=[8,9],l=[9];if(1===r)switch(!0){case 5===e.length&&n.includes(t.target.value%10):case 4===e.length&&a.includes(t.target.value%10):case 3===e.length&&o.includes(t.target.value%10):case 2===e.length&&l.includes(t.target.value%10):return!0}if(10===r)switch(!0){case 5===e.length&&n.includes(Math.floor(t.target.value/10)):case 4===e.length&&a.includes(Math.floor(t.target.value/10)):case 3===e.length&&o.includes(Math.floor(t.target.value/10)):case 2===e.length&&l.includes(Math.floor(t.target.value/10)):return!0}},i=(e,t,r,n)=>{let a=[];if(1!==e.length){for(let o=0;o<=(e.length-1)*n;o+=n){if(l(e,t,n))return;if(t.target.value+o=="x0")return;if(null===document.querySelector(`div[value="${t.target.value+o}"]`))return;if(t.target.value+o=="x0")return;document.querySelector(`div[value="${t.target.value+o}"]`).style.backgroundColor=r,a.push(t.target.value+o)}return a}};let c=!0,s="horizontal",u=1;const d=document.querySelector("#rotate"),h=(e,t,n)=>{let o=document.querySelectorAll(`.player-grids.${s}`);const l=new r(t,[0,0,0],[1,2,3]);3===t&&c&&(t+=1,c=!1),t<=1?g(e):(o.forEach((r=>r.addEventListener("mouseover",(n=>{i(l,n,"lightblue",u),r.addEventListener("click",(r=>{l.position=i(l,r,"gray",u),l.column=(e=>{let t=[];for(let r=0;r<=e.length-1;r++)e.position[r]&&t.push(Math.floor(e.position[r]/10));return t})(l),e.placeShip(l),a(e,"primary-container","player-grids",s),Array.from(document.querySelectorAll(".player-grids")).filter((e=>"x"===e.value)).forEach((e=>e.style.backgroundColor="lightblue")),h(e,t-1)}))})))),o.forEach((e=>e.addEventListener("mouseout",(e=>{i(l,e,"rgb(232 230 230)",u)})))))},g=r=>{let n,a,o,l=new e;l.name="aiBoard";const i=document.querySelectorAll(".player-grids");document.querySelectorAll(".ai-grids").forEach((e=>e.addEventListener("click",(c=>{const s=c.target.value;n=new t,a=n.autoPlay(i),o=a.value,"x"===s?(l.recieveAttack(s),p(l),e.style.backgroundColor="rgb(248, 78, 49 )",v(a,o,r)):(e.style.backgroundColor="lightgreen",v(a,o,r))}))))},v=(e,t,r)=>{e.addEventListener("click",(n=>{const a=n.target.value;"x"===t?(r.recieveAttack(t),p(r),e.style.backgroundColor="rgb(248, 78, 49 )",r.recieveAttack(a)):e.style.backgroundColor="lightgreen"}));const n=new Event("click");e.dispatchEvent(n)};d.addEventListener("click",(e=>{"horizontal"===s?(s="vertical",u=10):"vertical"===s&&(s="horizontal",u=1)}));const p=e=>{let t="";if(16===e.hits.length){t="aiBoard"===e.name?"You":"Computer";const r=document.querySelector(".winner-container");r.classList.add("show"),r.firstElementChild.textContent=`${t} Won!!`,r.addEventListener("click",(e=>{e.target instanceof HTMLButtonElement&&location.reload()}))}};(()=>{new t,new t;const o=new e,l=new e;o.initialize(0),l.initialize(100),n(o,"#primary-container","player-grids","horizontal"),n(l,"#secondary-container","ai-grids","horizontal"),(e=>{const t=new r(5,[0,0,0,0,0],[101,102,103,104,105]),n=new r(4,[7,7,7,7],[173,174,175,176]),o=new r(3,[2,2,2],[122,123,124]),l=new r(3,[4,4,4],[144,145,146]),i=new r(2,[8,9],[181,191]);e.placeShip(t),a(e,"secondary-container","ai-grids","horizontal"),e.placeShip(n),a(e,"secondary-container","ai-grids","horizontal"),e.placeShip(o),a(e,"secondary-container","ai-grids","horizontal"),e.placeShip(l),a(e,"secondary-container","ai-grids","horizontal"),e.placeShip(i),a(e,"secondary-container","ai-grids","horizontal")})(l),h(o,5,l)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,